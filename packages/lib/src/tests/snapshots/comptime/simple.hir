;; HIR: 73 instructions

%0 = .struct_decl
 ├ name_node: NONE
 ├ fields_list: 0 items
 └ declarations_list: 3 items
    ├ 0: %1 = .global_decl
    │  ├ name_node: node(#1: "sum_all")
    │  ├ extern: false
    │  ├ is_fn: true
    │  ├ is_type: false
    │  ├ visibility: "private"
    │  ├ exported: false
    │  ├ mutable: false
    │  ├ type: %28 = .fn_decl
    │  │  ├ name_node: node(#1: "sum_all")
    │  │  ├ return_type: %12 = .ty_i32
    │  │  │  └ node: node(#14: "i32")
    │  │  └ params_list: 4 items
    │  │     ├ 0: %5 = .param_decl
    │  │     │  ├ name_node: node(#3: "a")
    │  │     │  └ type: %4 = .ty_i32
    │  │     │     └ node: node(#4: "i32")
    │  │     ├ 1: %7 = .param_decl
    │  │     │  ├ name_node: node(#6: "b")
    │  │     │  └ type: %6 = .ty_i32
    │  │     │     └ node: node(#7: "i32")
    │  │     ├ 2: %9 = .param_decl
    │  │     │  ├ name_node: node(#9: "c")
    │  │     │  └ type: %8 = .ty_i32
    │  │     │     └ node: node(#10: "i32")
    │  │     └ 3: %11 = .param_decl
    │  │        ├ name_node: node(#12: "d")
    │  │        └ type: %10 = .ty_i32
    │  │           └ node: node(#13: "i32")
    │  └ init: %13 = .block
    │     ├ %14 = .param operand=(%5)
    │     ├ %15 = .param operand=(%7)
    │     ├ %16 = .param operand=(%9)
    │     ├ %17 = .param operand=(%11)
    │     ├ %18 = .param_get operand=(%14)
    │     ├ %19 = .param_get operand=(%15)
    │     ├ %20 = .fn_call callee=(%3), args_list=({%18, %19})
    │     ├ %21 = .param_get operand=(%16)
    │     ├ %22 = .param_get operand=(%17)
    │     ├ %23 = .fn_call callee=(%3), args_list=({%21, %22})
    │     ├ %24 = .fn_call callee=(%3), args_list=({%20, %23})
    │     ├ %25 = .ty_i32 node=(n[14:"i32"])
    │     ├ %26 = .as lhs=(%24), rhs=(%25)
    │     └ %27 = .ret operand=(26)
    ├ 1: %2 = .global_decl
    │  ├ name_node: node(#29: "main")
    │  ├ extern: false
    │  ├ is_fn: true
    │  ├ is_type: false
    │  ├ visibility: "private"
    │  ├ exported: false
    │  ├ mutable: false
    │  ├ type: %57 = .fn_decl
    │  │  ├ name_node: node(#29: "main")
    │  │  ├ return_type: %29 = .ty_void
    │  │  │  └ node: node(#30: "void")
    │  │  └ params_list: 0 items
    │  └ init: %30 = .block
    │     ├ %31 = comptime .inline_block
    │     │  ├ %32 = .comptime_number node=(n[34:"1"])
    │     │  ├ %33 = .comptime_number node=(n[35:"2"])
    │     │  ├ %34 = .comptime_number node=(n[36:"3"])
    │     │  ├ %35 = .comptime_number node=(n[37:"4"])
    │     │  ├ %36 = .fn_call callee=(%1), args_list=({%32, %33, %34, %35})
    │     │  └ %37 = .br operand=(36), target=(%31)
    │     ├ %38 = .typeof operand=(%31)
    │     ├ %39 = .alloc mutable=(false), type=(%38)
    │     ├ %40 = .store pointer=(%39), value=(%31)
    │     ├ %41 = .comptime_number node=(n[43:"1"])
    │     ├ %42 = .comptime_number node=(n[44:"2"])
    │     ├ %43 = .comptime_number node=(n[45:"3"])
    │     ├ %44 = .comptime_number node=(n[46:"4"])
    │     ├ %45 = .fn_call callee=(%1), args_list=({%41, %42, %43, %44})
    │     ├ %46 = .typeof operand=(%45)
    │     ├ %47 = .alloc mutable=(false), type=(%46)
    │     ├ %48 = .store pointer=(%47), value=(%45)
    │     ├ %49 = comptime .inline_block
    │     │  ├ %50 = .comptime_number node=(n[50:"2"])
    │     │  ├ %51 = .comptime_number node=(n[51:"3"])
    │     │  ├ %52 = .add lhs=(%50), rhs=(%51)
    │     │  └ %53 = .br operand=(52), target=(%49)
    │     ├ %54 = .typeof operand=(%49)
    │     ├ %55 = .alloc mutable=(false), type=(%54)
    │     └ %56 = .store pointer=(%55), value=(%49)
    └ 2: %3 = .global_decl
       ├ name_node: node(#57: "add")
       ├ extern: false
       ├ is_fn: true
       ├ is_type: false
       ├ visibility: "private"
       ├ exported: false
       ├ mutable: false
       ├ type: %72 = .fn_decl
       │  ├ name_node: node(#57: "add")
       │  ├ return_type: %62 = .ty_i32
       │  │  └ node: node(#64: "i32")
       │  └ params_list: 2 items
       │     ├ 0: %59 = .param_decl
       │     │  ├ name_node: node(#59: "a")
       │     │  └ type: %58 = .ty_i32
       │     │     └ node: node(#60: "i32")
       │     └ 1: %61 = .param_decl
       │        ├ name_node: node(#62: "b")
       │        └ type: %60 = .ty_i32
       │           └ node: node(#63: "i32")
       └ init: %63 = .block
          ├ %64 = .param operand=(%59)
          ├ %65 = .param operand=(%61)
          ├ %66 = .param_get operand=(%64)
          ├ %67 = .param_get operand=(%65)
          ├ %68 = .add lhs=(%66), rhs=(%67)
          ├ %69 = .ty_i32 node=(n[64:"i32"])
          ├ %70 = .as lhs=(%68), rhs=(%69)
          └ %71 = .ret operand=(70)
