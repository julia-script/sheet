;; Sema
;; 1 declarations
;; 3 entities
;; 1 symbols
;; 23 instructions
;; 7 values
;; 2 types
;; 0 lists
;; 5 strings
;; 4/8 comptime memory used/allocated bytes

%0 = fn @"comptime/loop.sk::unfold"() -> i32
 └ %0: void = .block: [%1-%22]                                        ; void
    └ %1: void = .block: [%2-%22]                                     ; void
       ├ !%2: number = .constant                                      ; number{ 0 }
       ├ !%3: type = .type                                            ; type(i32)
       ├ %4: *i32 = .alloc type=(i32) mutable=(true)                  ; *i32@0
       ├ !%5: void = .store operand=(%4) payload=(%2)                 ; void
       ├ !%6: void = .void                                            ; void
       ├ %7: void = comptime .block: [%8-%18]                         ; void
       │  ├ !%8: i32 = .load operand=(%4)                             ; i32{ 0 }
       │  ├ !%9: number = .constant                                   ; number{ 3 }
       │  ├ !%10: i32 = .constant                                     ; i32{ 3 }
       │  ├ !%11: bool = .constant                                    ; true
       │  └ %12: void = comptime .block: [%13-%18]                    ; void
       │     ├ !%13: i32 = .load operand=(%4)                         ; i32{ 0 }
       │     ├ !%14: number = .constant                               ; number{ 1 }
       │     ├ !%15: i32 = .constant                                  ; i32{ 1 }
       │     ├ !%16: i32 = .constant                                  ; i32{ 1 }
       │     ├ !%17: void = .store operand=(%4) payload=(%16)         ; void
       │     └ !%18: void = .br operand=(%6)                          ; void
       ├ !%20: type = .type                                           ; type(i32)
       ├ %21: i32 = .constant                                         ; i32{ 1 }
       └ %22: void = .ret maybe_operand=(%21)                         ; void

