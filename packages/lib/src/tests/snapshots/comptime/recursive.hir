;; HIR: 60 instructions

%0 = .struct_decl
 ├ name_node: NONE
 ├ fields_list: 0 items
 ├ declarations_list: 4 items
 │  ├ 0: %1 = .global_decl
 │  │  ├ name_node: node(#1: "foo")
 │  │  ├ extern: false
 │  │  ├ is_fn: true
 │  │  ├ is_type: false
 │  │  ├ visibility: "private"
 │  │  ├ exported: false
 │  │  ├ mutable: false
 │  │  ├ type: %14 = .fn_decl
 │  │  │  ├ name_node: node(#1: "foo")
 │  │  │  ├ return_type: %7 = .ty_i32
 │  │  │  │  └ node: node(#5: "i32")
 │  │  │  └ params_list: 1 items
 │  │  │     └ 0: %6 = .param_decl
 │  │  │        ├ name_node: node(#3: "a")
 │  │  │        └ type: %5 = .ty_i32
 │  │  │           └ node: node(#4: "i32")
 │  │  ├ init: %8 = .block
 │  │  │  ├ %9 = .param operand=(%6)
 │  │  │  ├ %10 = .param_get operand=(%9)
 │  │  │  ├ %11 = .ty_i32 node=(n[5:"i32"])
 │  │  │  ├ %12 = .as lhs=(%10), rhs=(%11)
 │  │  │  └ %13 = .ret operand=(12)
 │  │  └ is_declaring_builtin: false
 │  ├ 1: %2 = .global_decl
 │  │  ├ name_node: node(#11: "bar")
 │  │  ├ extern: false
 │  │  ├ is_fn: true
 │  │  ├ is_type: false
 │  │  ├ visibility: "private"
 │  │  ├ exported: false
 │  │  ├ mutable: false
 │  │  ├ type: %26 = .fn_decl
 │  │  │  ├ name_node: node(#11: "bar")
 │  │  │  ├ return_type: %17 = .ty_i32
 │  │  │  │  └ node: node(#15: "i32")
 │  │  │  └ params_list: 1 items
 │  │  │     └ 0: %16 = .param_decl
 │  │  │        ├ name_node: node(#13: "a")
 │  │  │        └ type: %15 = .ty_i32
 │  │  │           └ node: node(#14: "i32")
 │  │  ├ init: %18 = .block
 │  │  │  ├ %19 = .param operand=(%16)
 │  │  │  ├ %20 = .global_get operand=(%3)
 │  │  │  ├ %21 = .param_get operand=(%19)
 │  │  │  ├ %22 = .fn_call callee=(%20), args_list=({%21})
 │  │  │  ├ %23 = .ty_i32 node=(n[15:"i32"])
 │  │  │  ├ %24 = .as lhs=(%22), rhs=(%23)
 │  │  │  └ %25 = .ret operand=(24)
 │  │  └ is_declaring_builtin: false
 │  ├ 2: %3 = .global_decl
 │  │  ├ name_node: node(#23: "rec")
 │  │  ├ extern: false
 │  │  ├ is_fn: true
 │  │  ├ is_type: false
 │  │  ├ visibility: "private"
 │  │  ├ exported: false
 │  │  ├ mutable: false
 │  │  ├ type: %49 = .fn_decl
 │  │  │  ├ name_node: node(#23: "rec")
 │  │  │  ├ return_type: %29 = .ty_i32
 │  │  │  │  └ node: node(#27: "i32")
 │  │  │  └ params_list: 1 items
 │  │  │     └ 0: %28 = .param_decl
 │  │  │        ├ name_node: node(#25: "a")
 │  │  │        └ type: %27 = .ty_i32
 │  │  │           └ node: node(#26: "i32")
 │  │  ├ init: %30 = .block
 │  │  │  ├ %31 = .param operand=(%28)
 │  │  │  ├ %32 = .param_get operand=(%31)
 │  │  │  ├ %33 = .number_literal node=(n[30:"10"])
 │  │  │  ├ %34 = .lt lhs=(%32), rhs=(%33)
 │  │  │  ├ %35 = .if_expr cond (%34)
 │  │  │  │  └ then: %36 = .block
 │  │  │  │     ├ %37 = .global_get operand=(%2)
 │  │  │  │     ├ %38 = .number_literal node=(n[33:"2"])
 │  │  │  │     ├ %39 = .param_get operand=(%31)
 │  │  │  │     ├ %40 = .mul lhs=(%38), rhs=(%39)
 │  │  │  │     ├ %41 = .fn_call callee=(%37), args_list=({%40})
 │  │  │  │     ├ %42 = .ty_i32 node=(n[27:"i32"])
 │  │  │  │     ├ %43 = .as lhs=(%41), rhs=(%42)
 │  │  │  │     └ %44 = .ret operand=(43)
 │  │  │  ├ %45 = .param_get operand=(%31)
 │  │  │  ├ %46 = .ty_i32 node=(n[27:"i32"])
 │  │  │  ├ %47 = .as lhs=(%45), rhs=(%46)
 │  │  │  └ %48 = .ret operand=(47)
 │  │  └ is_declaring_builtin: false
 │  └ 3: %4 = .global_decl
 │     ├ name_node: node(#44: "main")
 │     ├ extern: false
 │     ├ is_fn: true
 │     ├ is_type: false
 │     ├ visibility: "private"
 │     ├ exported: false
 │     ├ mutable: false
 │     ├ type: %59 = .fn_decl
 │     │  ├ name_node: node(#44: "main")
 │     │  ├ return_type: %50 = .ty_void
 │     │  │  └ node: node(#45: "void")
 │     │  └ params_list: 0 items
 │     ├ init: %51 = .block
 │     │  └ %52 = comptime .inline_block
 │     │     ├ %53 = .global_get operand=(%3)
 │     │     ├ %54 = .number_literal node=(n[48:"1"])
 │     │     ├ %55 = .fn_call callee=(%53), args_list=({%54})
 │     │     ├ %56 = .number_literal node=(n[50:"16"])
 │     │     ├ %57 = .eq lhs=(%55), rhs=(%56)
 │     │     └ %58 = .br operand=(57), target=(%52)
 │     └ is_declaring_builtin: false
 └ impl_block_list: 0 items
