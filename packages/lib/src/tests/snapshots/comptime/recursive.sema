;; Sema
;; 4 declarations
;; 15 entities
;; 4 symbols
;; 49 instructions
;; 16 values
;; 4 types
;; 4 lists
;; 22 strings
;; 0/0 comptime memory used/allocated bytes

%0 = fn @"comptime/recursive.sk::foo"(i32) -> i32
 └ %0: void = .block: [%1-%5]                                         ; void
    ├ %1: i32 = .param index=(%0)                                     ; exec_time
    ├ %2: i32 = .param_get operand=(%1)                               ; exec_time
    ├ !%3: type = .type                                               ; type(i32)
    ├ %4: i32 = .cast operand=(%2)                                    ; exec_time
    └ %5: void = .ret maybe_operand=(%4)                              ; void

%1 = fn @"comptime/recursive.sk::bar"(i32) -> i32
 └ %0: void = .block: [%1-%6]                                         ; void
    ├ %1: i32 = .param index=(%0)                                     ; exec_time
    ├ %2: i32 = .param_get operand=(%1)                               ; exec_time
    ├ %3: i32 = .fn_call callee_entity=(%3) callee=(%2) args_list=({%2}); exec_time
    ├ !%4: type = .type                                               ; type(i32)
    ├ %5: i32 = .cast operand=(%3)                                    ; exec_time
    └ %6: void = .ret maybe_operand=(%5)                              ; void

%2 = fn @"comptime/recursive.sk::rec"(i32) -> i32
 └ %0: void = .block: [%1-%19]                                        ; void
    ├ %1: i32 = .param index=(%0)                                     ; exec_time
    ├ %2: i32 = .param_get operand=(%1)                               ; exec_time
    ├ !%3: number = .constant                                         ; int(10)
    ├ %4: i32 = .constant                                             ; int(10)
    ├ %5: bool = .lt lhs=(%2) rhs=(%4)                                ; exec_time
    ├ %6: if (%5) then: [%7-%15]
    │  └ %7: void = .block: [%8-%15]                                  ; void
    │     ├ !%8: number = .constant                                   ; int(2)
    │     ├ %9: i32 = .param_get operand=(%1)                         ; exec_time
    │     ├ %10: i32 = .constant                                      ; int(2)
    │     ├ %11: i32 = .mul lhs=(%10) rhs=(%9)                        ; exec_time
    │     ├ %12: i32 = .fn_call callee_entity=(%2) callee=(%1) args_list=({%11}); exec_time
    │     ├ !%13: type = .type                                        ; type(i32)
    │     ├ %14: i32 = .cast operand=(%12)                            ; exec_time
    │     └ %15: void = .ret maybe_operand=(%14)                      ; void
    ├ %16: i32 = .param_get operand=(%1)                              ; exec_time
    ├ !%17: type = .type                                              ; type(i32)
    ├ %18: i32 = .cast operand=(%16)                                  ; exec_time
    └ %19: void = .ret maybe_operand=(%18)                            ; void

%3 = fn @"comptime/recursive.sk::main"() -> void
 └ %0: void = .block: [%1-%8]                                         ; void
    └ %1: bool = .block: [%2-%8]                                      ; true
       ├ !%2: number = .constant                                      ; int(1)
       ├ !%3: i32 = .constant                                         ; int(1)
       ├ !%4: i32 = .fn_call callee_entity=(%3) callee=(%2) args_list=({%3}); int(16)
       ├ !%5: number = .constant                                      ; int(16)
       ├ !%6: i32 = .constant                                         ; int(16)
       ├ !%7: bool = .constant                                        ; true
       └ !%8: void = .br operand=(%1)                                 ; void

