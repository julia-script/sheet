;; HIR: 60 instructions

%0 = .struct_decl
 ├ name_node: NONE
 ├ fields_list: 0 items
 ├ declarations_list: 2 items
 │  ├ 0: %1 = .global_decl
 │  │  ├ name_node: node(#1: "sum_array")
 │  │  ├ extern: false
 │  │  ├ is_fn: true
 │  │  ├ is_type: false
 │  │  ├ visibility: "private"
 │  │  ├ exported: false
 │  │  ├ mutable: false
 │  │  ├ type: %51 = .fn_decl
 │  │  │  ├ name_node: node(#1: "sum_array")
 │  │  │  ├ return_type: %3 = .ty_i32
 │  │  │  │  └ node: node(#2: "i32")
 │  │  │  └ params_list: 0 items
 │  │  ├ init: %4 = .block
 │  │  │  ├ %5 = .ty_i32 node=(n[9:"i32"])
 │  │  │  ├ %6 = .number_literal node=(n[8:"4"])
 │  │  │  ├ %7 = .ty_array type=(%5), size=(%6)
 │  │  │  ├ %8 = .number_literal node=(n[11:"1"])
 │  │  │  ├ %9 = .number_literal node=(n[12:"2"])
 │  │  │  ├ %10 = .number_literal node=(n[13:"3"])
 │  │  │  ├ %11 = .number_literal node=(n[14:"4"])
 │  │  │  ├ %12 = .array_init type=(%7), items_list=({%8, %9, %10, %11})
 │  │  │  ├ %13 = .ty_i32 node=(n[6:"i32"])
 │  │  │  ├ %14 = .number_literal node=(n[5:"4"])
 │  │  │  ├ %15 = .ty_array type=(%13), size=(%14)
 │  │  │  ├ %16 = .alloc mutable=(false), type=(%15)
 │  │  │  ├ %17 = .store pointer=(%16), value=(%12)
 │  │  │  ├ %18 = .number_literal node=(n[19:"0"])
 │  │  │  ├ %19 = .ty_i32 node=(n[18:"i32"])
 │  │  │  ├ %20 = .alloc mutable=(true), type=(%19)
 │  │  │  ├ %21 = .store pointer=(%20), value=(%18)
 │  │  │  ├ %22 = .number_literal node=(n[23:"0"])
 │  │  │  ├ %23 = .ty_i32 node=(n[22:"i32"])
 │  │  │  ├ %24 = .alloc mutable=(true), type=(%23)
 │  │  │  ├ %25 = .store pointer=(%24), value=(%22)
 │  │  │  ├ %26 = .loop
 │  │  │  │  └ body: %27 = .block
 │  │  │  │     ├ %28 = .load operand=(%20)
 │  │  │  │     ├ %29 = .get_property_pointer base=(%16), property_name_node=(n[27:"len"]), is_builtin=(false)
 │  │  │  │     ├ %30 = .get_property_pointer base=(%29), property_name_node=(n[29:"as"]), is_builtin=(true)
 │  │  │  │     ├ %31 = .ty_i32 node=(n[31:"i32"])
 │  │  │  │     ├ %32 = .fn_call callee=(%30), args_list=({%31})
 │  │  │  │     ├ %33 = .lt lhs=(%28), rhs=(%32)
 │  │  │  │     └ %34 = .if_expr cond (%33)
 │  │  │  │        └ then: %35 = .block
 │  │  │  │           ├ %36 = .load operand=(%24)
 │  │  │  │           ├ %37 = .load operand=(%20)
 │  │  │  │           ├ %38 = .get_element_pointer base=(%16), index=(%37)
 │  │  │  │           ├ %39 = .load operand=(%38)
 │  │  │  │           ├ %40 = .add lhs=(%36), rhs=(%39)
 │  │  │  │           ├ %41 = .store pointer=(%24), value=(%40)
 │  │  │  │           ├ %42 = .load operand=(%20)
 │  │  │  │           ├ %43 = .number_literal node=(n[43:"1"])
 │  │  │  │           ├ %44 = .add lhs=(%42), rhs=(%43)
 │  │  │  │           ├ %45 = .store pointer=(%20), value=(%44)
 │  │  │  │           └ %46 = .br operand=(null), target=(%26)
 │  │  │  ├ %47 = .load operand=(%24)
 │  │  │  ├ %48 = .ty_i32 node=(n[2:"i32"])
 │  │  │  ├ %49 = .as lhs=(%47), rhs=(%48)
 │  │  │  └ %50 = .ret operand=(49)
 │  │  └ is_declaring_builtin: false
 │  └ 1: %2 = .global_decl
 │     ├ name_node: node(#52: "main")
 │     ├ extern: false
 │     ├ is_fn: true
 │     ├ is_type: false
 │     ├ visibility: "private"
 │     ├ exported: false
 │     ├ mutable: false
 │     ├ type: %59 = .fn_decl
 │     │  ├ name_node: node(#52: "main")
 │     │  ├ return_type: %52 = .ty_void
 │     │  │  └ node: node(#53: "void")
 │     │  └ params_list: 0 items
 │     ├ init: %53 = .block
 │     │  ├ %54 = .global_get operand=(%1)
 │     │  ├ %55 = .fn_call callee=(%54), args_list=({})
 │     │  ├ %56 = .typeof operand=(%55)
 │     │  ├ %57 = .alloc mutable=(false), type=(%56)
 │     │  └ %58 = .store pointer=(%57), value=(%55)
 │     └ is_declaring_builtin: false
 └ impl_block_list: 0 items
