;; Sema
;; 1 declarations
;; 3 entities
;; 1 symbols
;; 67 instructions
;; 13 values
;; 4 types
;; 0 lists
;; 7 strings

%0 = @root::sum_array() -> i32
 └ %0: void = .block: [%1-%66]                                        ; void
    ├ %1: type = .type                                                ; type(i32)
    ├ %2: number = .constant                                          ; int(4)
    ├ !%3: type = .type                                               ; type([4]i32)
    ├ %4: *[4]i32 = .alloc type=([4]i32) mutable=(false)              ; exec_time
    ├ !%5: number = .constant                                         ; int(1)
    ├ %6: number = .constant                                          ; int(0)
    ├ %7: *i32 = .get_element_pointer base=(%4) index=(6)             ; exec_time
    ├ %8: i32 = .constant                                             ; int(1)
    ├ %9: void = .store operand=(%7) payload=(%8)                     ; void
    ├ !%10: number = .constant                                        ; int(2)
    ├ %11: number = .constant                                         ; int(1)
    ├ %12: *i32 = .get_element_pointer base=(%4) index=(11)           ; exec_time
    ├ %13: i32 = .constant                                            ; int(2)
    ├ %14: void = .store operand=(%12) payload=(%13)                  ; void
    ├ !%15: number = .constant                                        ; int(3)
    ├ %16: number = .constant                                         ; int(2)
    ├ %17: *i32 = .get_element_pointer base=(%4) index=(16)           ; exec_time
    ├ %18: i32 = .constant                                            ; int(3)
    ├ %19: void = .store operand=(%17) payload=(%18)                  ; void
    ├ !%20: number = .constant                                        ; int(4)
    ├ %21: number = .constant                                         ; int(3)
    ├ %22: *i32 = .get_element_pointer base=(%4) index=(21)           ; exec_time
    ├ %23: i32 = .constant                                            ; int(4)
    ├ %24: void = .store operand=(%22) payload=(%23)                  ; void
    ├ %25: [4]i32 = .load operand=(%4)                                ; exec_time
    ├ %26: type = .type                                               ; type(i32)
    ├ %27: number = .constant                                         ; int(4)
    ├ !%28: type = .type                                              ; type([4]i32)
    ├ %29: *[4]i32 = .alloc type=([4]i32) mutable=(false)             ; exec_time
    ├ %30: void = .store operand=(%29) payload=(%25)                  ; void
    ├ !%31: number = .constant                                        ; int(0)
    ├ !%32: type = .type                                              ; type(i32)
    ├ %33: *i32 = .alloc type=(i32) mutable=(true)                    ; exec_time
    ├ %34: i32 = .constant                                            ; int(0)
    ├ %35: void = .store operand=(%33) payload=(%34)                  ; void
    ├ !%36: number = .constant                                        ; int(0)
    ├ !%37: type = .type                                              ; type(i32)
    ├ %38: *i32 = .alloc type=(i32) mutable=(true)                    ; exec_time
    ├ %39: i32 = .constant                                            ; int(0)
    ├ %40: void = .store operand=(%38) payload=(%39)                  ; void
    ├ %41 loop: [%42-%62]
    │  └ %42: void = .block: [%43-%62]                                ; void
    │     ├ %43: i32 = .load operand=(%33)                            ; exec_time
    │     ├ !%44: usize = .constant                                   ; int(4)
    │     ├ !%45: builtin_fn_as = .get_builtin_fn_as operand=(%44)    ; type(builtin_fn_as)
    │     ├ !%46: type = .type                                        ; type(i32)
    │     ├ %47: i32 = .cast_reinterpret operand=(%44)                ; int(4)
    │     ├ %48: bool = .lt lhs=(%43) rhs=(%47)                       ; exec_time
    │     └ %49: if (%48) then: [%50-%62]
    │        └ %50: void = .block: [%51-%62]                          ; void
    │           ├ %51: i32 = .load operand=(%38)                      ; exec_time
    │           ├ %52: i32 = .load operand=(%33)                      ; exec_time
    │           ├ %53: *i32 = .get_element_pointer base=(%29) index=(52); exec_time
    │           ├ %54: i32 = .load operand=(%53)                      ; exec_time
    │           ├ %55: i32 = .add lhs=(%51) rhs=(%54)                 ; exec_time
    │           ├ %56: void = .store operand=(%38) payload=(%55)      ; void
    │           ├ %57: i32 = .load operand=(%33)                      ; exec_time
    │           ├ !%58: number = .constant                            ; int(1)
    │           ├ %59: i32 = .constant                                ; int(1)
    │           ├ %60: i32 = .add lhs=(%57) rhs=(%59)                 ; exec_time
    │           ├ %61: void = .store operand=(%33) payload=(%60)      ; void
    │           └ %62: void = .br operand=(%41)                       ; void
    ├ %63: i32 = .load operand=(%38)                                  ; exec_time
    ├ %64: type = .type                                               ; type(i32)
    ├ %65: type = .cast operand=(%63)                                 ; exec_time
    └ %66: void = .ret maybe_operand=(%65)                            ; void

