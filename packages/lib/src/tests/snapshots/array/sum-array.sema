;; Sema
;; 1 declarations
;; 3 entities
;; 1 symbols
;; 63 instructions
;; 9 values
;; 6 types
;; 0 lists
;; 6 strings

%0 = @root::sum_array() -> mod{ent{0}, {}}
 └ %0: void = .block: [%1-%62]                                        ; void
    ├ %1: type = .type                                                ; type(i32)
    ├ %2: number = .constant                                          ; int(4)
    ├ %3: type = .type                                                ; type([4]i32)
    ├ %4: *[4]i32 = .alloc type_inst=(%3) mutable=(false)             ; runtime
    ├ %5: number = .constant                                          ; int(1)
    ├ %6: number = .constant                                          ; int(0)
    ├ %7: *i32 = .get_element_pointer base=(%4) index=(6)             ; runtime
    ├ %8: i32 = .cast operand=(%5)                                    ; int(1)
    ├ %9: void = .store operand=(%7) payload=(%8)                     ; void
    ├ %10: number = .constant                                         ; int(2)
    ├ %11: number = .constant                                         ; int(1)
    ├ %12: *i32 = .get_element_pointer base=(%4) index=(11)           ; runtime
    ├ %13: i32 = .cast operand=(%10)                                  ; int(2)
    ├ %14: void = .store operand=(%12) payload=(%13)                  ; void
    ├ %15: number = .constant                                         ; int(3)
    ├ %16: number = .constant                                         ; int(2)
    ├ %17: *i32 = .get_element_pointer base=(%4) index=(16)           ; runtime
    ├ %18: i32 = .cast operand=(%15)                                  ; int(3)
    ├ %19: void = .store operand=(%17) payload=(%18)                  ; void
    ├ %20: number = .constant                                         ; int(4)
    ├ %21: number = .constant                                         ; int(3)
    ├ %22: *i32 = .get_element_pointer base=(%4) index=(21)           ; runtime
    ├ %23: i32 = .cast operand=(%20)                                  ; int(4)
    ├ %24: void = .store operand=(%22) payload=(%23)                  ; void
    ├ %25: [4]i32 = .load operand=(%4)                                ; runtime
    ├ %26: type = .type                                               ; type(i32)
    ├ %27: number = .constant                                         ; int(4)
    ├ %28: type = .type                                               ; type([4]i32)
    ├ %29: *[4]i32 = .alloc type_inst=(%28) mutable=(false)           ; runtime
    ├ %30: void = .store operand=(%29) payload=(%25)                  ; void
    ├ %31: number = .constant                                         ; int(0)
    ├ %32: type = .type                                               ; type(i32)
    ├ %33: *i32 = .alloc type_inst=(%32) mutable=(true)               ; runtime
    ├ %34: i32 = .cast operand=(%31)                                  ; int(0)
    ├ %35: void = .store operand=(%33) payload=(%34)                  ; void
    ├ %36: number = .constant                                         ; int(0)
    ├ %37: type = .type                                               ; type(i32)
    ├ %38: *i32 = .alloc type_inst=(%37) mutable=(true)               ; runtime
    ├ %39: i32 = .cast operand=(%36)                                  ; int(0)
    ├ %40: void = .store operand=(%38) payload=(%39)                  ; void
    ├ %41 loop: [%42-%60]
    │  └ %42: void = .block: [%43-%60]                                ; void
    │     ├ %43: i32 = .load operand=(%33)                            ; runtime
    │     ├ %44: usize = .constant                                    ; int(4)
    │     ├ %45: usize = .constant                                    ; int(4)
    │     ├ %46: bool = .lt lhs=(%43) rhs=(%45)                       ; runtime
    │     └ %47: if (%46) then: [%48-%60]
    │        └ %48: void = .block: [%49-%60]                          ; void
    │           ├ %49: i32 = .load operand=(%38)                      ; runtime
    │           ├ %50: i32 = .load operand=(%33)                      ; runtime
    │           ├ %51: *i32 = .get_element_pointer base=(%29) index=(50); runtime
    │           ├ %52: i32 = .load operand=(%51)                      ; runtime
    │           ├ %53: i32 = .add lhs=(%49) rhs=(%52)                 ; runtime
    │           ├ %54: void = .store operand=(%38) payload=(%53)      ; void
    │           ├ %55: i32 = .load operand=(%33)                      ; runtime
    │           ├ %56: number = .constant                             ; int(1)
    │           ├ %57: i32 = .cast operand=(%56)                      ; int(1)
    │           ├ %58: i32 = .add lhs=(%55) rhs=(%57)                 ; runtime
    │           ├ %59: void = .store operand=(%33) payload=(%58)      ; void
    │           └ %60: void = .br operand=(%41)                       ; void
    ├ %61: i32 = .load operand=(%38)                                  ; runtime
    └ %62: void = .ret maybe_operand=(%61)                            ; void

