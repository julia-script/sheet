;; Sema
;; 8 declarations
;; 17 entities
;; 8 symbols
;; 87 instructions
;; 24 values
;; 14 types
;; 2 lists
;; 27 strings
;; 24/38 comptime memory used/allocated bytes

%0 = fn @"array/array-init.sk::var_array"() -> void
 └ %0: void = .block: [%1-%14]                                        ; void
    ├ !%1: type = .type                                               ; type(i32)
    ├ !%2: number = .constant                                         ; int(1)
    ├ !%3: usize = .constant                                          ; int(1)
    ├ !%4: type = .type                                               ; type([1]i32)
    ├ !%5: number = .constant                                         ; int(33)
    ├ !%6: [1]i32 = .array_init                                       ; todo(array_init)
    ├ !%7: type = .type                                               ; type(i32)
    ├ !%8: number = .constant                                         ; int(1)
    ├ !%9: usize = .constant                                          ; int(1)
    ├ !%10: type = .type                                              ; type([1]i32)
    ├ %11: *[1]i32 = .alloc type=([1]i32) mutable=(false)             ; comp_ptr(0)
    ├ %12: i32 = .constant                                            ; int(33)
    ├ %13: *i32 = .get_element_pointer base=(%11) index=(%0)          ; comp_ptr(0)
    └ %14: void = .store operand=(%13) payload=(%12)                  ; void

%1 = fn @"array/array-init.sk::var_array_infer_type"() -> void
 └ %0: void = .block: [%1-%19]                                        ; void
    ├ !%1: type = .type                                               ; type(i32)
    ├ !%2: number = .constant                                         ; int(3)
    ├ !%3: usize = .constant                                          ; int(3)
    ├ !%4: type = .type                                               ; type([3]i32)
    ├ !%5: number = .constant                                         ; int(1)
    ├ !%6: number = .constant                                         ; int(2)
    ├ !%7: number = .constant                                         ; int(3)
    ├ !%8: [3]i32 = .array_init                                       ; todo(array_init)
    ├ !%9: type = .typeof operand=(%8)                                ; type([3]i32)
    ├ %10: *[3]i32 = .alloc type=([3]i32) mutable=(true)              ; exec_time
    ├ %11: i32 = .constant                                            ; int(1)
    ├ %12: *i32 = .get_element_pointer base=(%10) index=(%0)          ; exec_time
    ├ %13: void = .store operand=(%12) payload=(%11)                  ; void
    ├ %14: i32 = .constant                                            ; int(2)
    ├ %15: *i32 = .get_element_pointer base=(%10) index=(%1)          ; exec_time
    ├ %16: void = .store operand=(%15) payload=(%14)                  ; void
    ├ %17: i32 = .constant                                            ; int(3)
    ├ %18: *i32 = .get_element_pointer base=(%10) index=(%2)          ; exec_time
    └ %19: void = .store operand=(%18) payload=(%17)                  ; void

%2 = fn @"array/array-init.sk::var_int"() -> void
 └ %0: void = .block: [%1-%5]                                         ; void
    ├ !%1: number = .constant                                         ; int(2)
    ├ !%2: type = .type                                               ; type(i32)
    ├ %3: *i32 = .alloc type=(i32) mutable=(true)                     ; exec_time
    ├ %4: i32 = .constant                                             ; int(2)
    └ %5: void = .store operand=(%3) payload=(%4)                     ; void

%3 = fn @"array/array-init.sk::var_int_infer_type"() -> void
 └ %0: void = .block: [%1-%7]                                         ; void
    ├ !%1: number = .constant                                         ; int(2)
    ├ !%2: builtin_fn_as = .get_builtin_fn_as operand=(%1)            ; type(builtin_fn_as)
    ├ !%3: type = .type                                               ; type(i32)
    ├ %4: i32 = .constant                                             ; int(2)
    ├ !%5: type = .typeof operand=(%4)                                ; type(i32)
    ├ %6: *i32 = .alloc type=(i32) mutable=(true)                     ; exec_time
    └ %7: void = .store operand=(%6) payload=(%4)                     ; void

%4 = fn @"array/array-init.sk::const_array"() -> void
 └ %0: void = .block: [%1-%14]                                        ; void
    ├ !%1: type = .type                                               ; type(i32)
    ├ !%2: number = .constant                                         ; int(1)
    ├ !%3: usize = .constant                                          ; int(1)
    ├ !%4: type = .type                                               ; type([1]i32)
    ├ !%5: number = .constant                                         ; int(1)
    ├ !%6: [1]i32 = .array_init                                       ; todo(array_init)
    ├ !%7: type = .type                                               ; type(i32)
    ├ !%8: number = .constant                                         ; int(1)
    ├ !%9: usize = .constant                                          ; int(1)
    ├ !%10: type = .type                                              ; type([1]i32)
    ├ %11: *[1]i32 = .alloc type=([1]i32) mutable=(false)             ; comp_ptr(4)
    ├ %12: i32 = .constant                                            ; int(1)
    ├ %13: *i32 = .get_element_pointer base=(%11) index=(%0)          ; comp_ptr(4)
    └ %14: void = .store operand=(%13) payload=(%12)                  ; void

%5 = fn @"array/array-init.sk::const_array_infer_type"() -> void
 └ %0: void = .block: [%1-%11]                                        ; void
    ├ !%1: type = .type                                               ; type(i32)
    ├ !%2: number = .constant                                         ; int(1)
    ├ !%3: usize = .constant                                          ; int(1)
    ├ !%4: type = .type                                               ; type([1]i32)
    ├ !%5: number = .constant                                         ; int(1)
    ├ !%6: [1]i32 = .array_init                                       ; todo(array_init)
    ├ !%7: type = .typeof operand=(%6)                                ; type([1]i32)
    ├ %8: *[1]i32 = .alloc type=([1]i32) mutable=(false)              ; comp_ptr(8)
    ├ %9: i32 = .constant                                             ; int(1)
    ├ %10: *i32 = .get_element_pointer base=(%8) index=(%0)           ; comp_ptr(8)
    └ %11: void = .store operand=(%10) payload=(%9)                   ; void

%6 = fn @"array/array-init.sk::const_int"() -> void
 └ %0: void = .block: [%1-%5]                                         ; void
    ├ !%1: number = .constant                                         ; int(2)
    ├ !%2: type = .type                                               ; type(i32)
    ├ %3: *i32 = .alloc type=(i32) mutable=(false)                    ; comp_ptr(c)
    ├ %4: i32 = .constant                                             ; int(2)
    └ %5: void = .store operand=(%3) payload=(%4)                     ; void

%7 = fn @"array/array-init.sk::const_int_infer_type"() -> void
 └ %0: void = .block: [%1-%4]                                         ; void
    ├ %1: number = .constant                                          ; int(2)
    ├ !%2: type = .typeof operand=(%1)                                ; type(number)
    ├ %3: *number = .alloc type=(number) mutable=(false)              ; comp_ptr(10)
    └ %4: void = .store operand=(%3) payload=(%1)                     ; void

