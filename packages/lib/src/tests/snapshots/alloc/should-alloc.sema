;; Sema
;; 4 declarations
;; 11 entities
;; 4 symbols
;; 28 instructions
;; 16 values
;; 7 types
;; 2 lists
;; 19 strings
;; 8/8 comptime memory used/allocated bytes

%0 = type @"alloc/should-alloc.sk::T" = struct:
 ├ type: struct{i32}
 ├ alignment: 4
 ├ size: 4
 └ fields: 1
    └ [0]
       ├ alignment: 4
       ├ size: 4
       ├ offset: 0
       └ type: i32


%1 = fn @"alloc/should-alloc.sk::should_alloc_1"() -> void
 └ %0: void = .block: [%1-%9]                                         ; void
    ├ !%1: type = .global_get declaration=(%0)                        ; type(struct{i32})
    ├ !%2: number = .constant                                         ; number{ 1 }
    ├ !%3: void = .field_init                                         ; void
    ├ !%4: struct{i32} = .type_init                                   ; todo_complex(1)
    ├ !%5: type = .typeof operand=(%4)                                ; type(struct{i32})
    ├ %6: *struct{i32} = .alloc type=(struct{i32}) mutable=(false)    ; *struct{i32}@0
    ├ %7: i32 = .constant                                             ; i32{ 1 }
    ├ %8: *i32 = .get_element_pointer base=(%6) index=(%0)            ; *i32@0
    └ %9: void = .store operand=(%8) payload=(%7)                     ; void

%2 = fn @"alloc/should-alloc.sk::should_alloc_2"() -> void
 └ %0: void = .block: [%1-%9]                                         ; void
    ├ !%1: type = .global_get declaration=(%0)                        ; type(struct{i32})
    ├ !%2: number = .constant                                         ; number{ 2 }
    ├ !%3: void = .field_init                                         ; void
    ├ !%4: struct{i32} = .type_init                                   ; todo_complex(1)
    ├ !%5: type = .typeof operand=(%4)                                ; type(struct{i32})
    ├ %6: *struct{i32} = .alloc type=(struct{i32}) mutable=(true)     ; *struct{i32}[runtime]
    ├ %7: i32 = .constant                                             ; i32{ 2 }
    ├ %8: *i32 = .get_element_pointer base=(%6) index=(%0)            ; *i32[runtime]
    └ %9: void = .store operand=(%8) payload=(%7)                     ; void

%3 = fn @"alloc/should-alloc.sk::should_alloc_3"() -> void
 └ %0: void = .block: [%1-%4]                                         ; void
    ├ !%1: number = .constant                                         ; number{ 10 }
    ├ !%2: type = .type                                               ; type(i32)
    ├ %3: *i32 = .alloc type=(i32) mutable=(false)                    ; *i32@4
    └ !%4: void = .store operand=(%3) payload=(%1)                    ; void

