;; AST
;; 290 Nodes
;; 382 Tokens
;; 172 Interned Lists

%0 = .struct_decl - tok[0..382]
 └ members_list: 30 items
    ├ %6 = .type_decl - tok[0..9]
    │  ├ name: %1 = .identifier - tok[1..1]
    │  │  └ token: .identifier 'T'
    │  ├ type: NONE
    │  └ value: %2 = .struct_decl - tok[3..9]
    │     └ members_list: 1 items
    │        └ %5 = .struct_field - tok[6..8]
    │           ├ name: %3 = .identifier - tok[5..5]
    │           │  └ token: .identifier 'bar'
    │           ├ type: %4 = .ty_i32 - tok[7..7]
    │           │  └ token: .keyword_i32 'i32'
    │           └ default_value: NONE
    ├ %23 = .fn_decl - tok[11..34]
    │  ├ proto: %9 = .fn_proto - tok[12..16]
    │  │  ├ name: %7 = .identifier - tok[12..12]
    │  │  │  └ token: .identifier 'struct_alloc'
    │  │  ├ params_list: 0 items
    │  │  └ ret_type: %8 = .ty_void - tok[16..16]
    │  │     └ token: .keyword_void 'void'
    │  └ body: %22 = .block - tok[17..33]
    │     └ list: 6 items
    │        ├ %10 = .comment_line - tok[18..19]
    │        │  └ token: .comment '// %0 = alloc T                          ; *T@ptr:0'
    │        ├ %11 = .comment_line - tok[19..20]
    │        │  └ token: .comment '// %1 = get_el_ptr %0 'bar' i=(0)        ; *i32@ptr:0'
    │        ├ %12 = .comment_line - tok[20..21]
    │        │  └ token: .comment '// %2 = const 123                        ; 123 int'
    │        ├ %13 = .comment_line - tok[21..22]
    │        │  └ token: .comment '// %3 = as i32 %2                        ; 123 i32'
    │        ├ %14 = .comment_line - tok[22..23]
    │        │  └ token: .comment '// %4 = store %1 %3                      ; void'
    │        └ %21 = .const_decl - tok[23..31]
    │           ├ name: %15 = .identifier - tok[24..24]
    │           │  └ token: .identifier 'foo'
    │           ├ type: NONE
    │           └ value: %20 = .type_init - tok[26..32]
    │              ├ type: %16 = .identifier - tok[26..26]
    │              │  └ token: .identifier 'T'
    │              └ field_init_list: 1 items
    │                 └ %19 = .field_init - tok[28..30]
    │                    ├ name: %17 = .identifier - tok[28..28]
    │                    │  └ token: .identifier 'bar'
    │                    └ value: %18 = .number_literal - tok[30..30]
    │                       └ token: .number_literal '123'
    ├ %49 = .fn_decl - tok[34..67]
    │  ├ proto: %26 = .fn_proto - tok[35..39]
    │  │  ├ name: %24 = .identifier - tok[35..35]
    │  │  │  └ token: .identifier 'struct_alloc_2'
    │  │  ├ params_list: 0 items
    │  │  └ ret_type: %25 = .ty_void - tok[39..39]
    │  │     └ token: .keyword_void 'void'
    │  └ body: %48 = .block - tok[40..66]
    │     └ list: 11 items
    │        ├ %27 = .comment_line - tok[41..42]
    │        │  └ token: .comment '// %0 = alloc T                          ; *T@ptr:0'
    │        ├ %28 = .comment_line - tok[42..43]
    │        │  └ token: .comment '// %1 = get_el_ptr %0 'bar' i=(0)        ; *i32@ptr:0'
    │        ├ %29 = .comment_line - tok[43..44]
    │        │  └ token: .comment '// %2 = const 123                        ; 123 int'
    │        ├ %30 = .comment_line - tok[44..45]
    │        │  └ token: .comment '// %3 = as i32 %2                        ; 123 i32'
    │        ├ %31 = .comment_line - tok[45..46]
    │        │  └ token: .comment '// %4 = store %1 %3                      ; void'
    │        ├ %38 = .var_decl - tok[46..54]
    │        │  ├ name: %32 = .identifier - tok[47..47]
    │        │  │  └ token: .identifier 'foo'
    │        │  ├ type: NONE
    │        │  └ value: %37 = .type_init - tok[49..55]
    │        │     ├ type: %33 = .identifier - tok[49..49]
    │        │     │  └ token: .identifier 'T'
    │        │     └ field_init_list: 1 items
    │        │        └ %36 = .field_init - tok[51..53]
    │        │           ├ name: %34 = .identifier - tok[51..51]
    │        │           │  └ token: .identifier 'bar'
    │        │           └ value: %35 = .number_literal - tok[53..53]
    │        │              └ token: .number_literal '123'
    │        ├ %39 = .comment_line - tok[56..57]
    │        │  └ token: .comment '// %5 = get_el_ptr %0 'bar' i=(0)        ; *i32@ptr:0'
    │        ├ %40 = .comment_line - tok[57..58]
    │        │  └ token: .comment '// %6 = const 3                          ; 3 int'
    │        ├ %41 = .comment_line - tok[58..59]
    │        │  └ token: .comment '// %7 = as i32 %6                        ; 3 i32'
    │        ├ %42 = .comment_line - tok[59..60]
    │        │  └ token: .comment '// %8 = store %5 %7                    ; void'
    │        └ %47 = .assign - tok[60..64]
    │           ├ lhs: %45 = .prop_access - tok[60..62]
    │           │  ├ lhs: %43 = .identifier - tok[60..60]
    │           │  │  └ token: .identifier 'foo'
    │           │  └ rhs: %44 = .identifier - tok[62..62]
    │           │     └ token: .identifier 'bar'
    │           └ rhs: %46 = .number_literal - tok[64..64]
    │              └ token: .number_literal '3'
    ├ %50 = .comment_line - tok[67..68]
    │  └ token: .comment '// fn struct_alloc_3(): void {'
    ├ %51 = .comment_line - tok[68..69]
    │  └ token: .comment '//   // %0 = alloc T                          ; *T@ptr:0'
    ├ %52 = .comment_line - tok[69..70]
    │  └ token: .comment '//   // %1 = get_el_ptr %0 'bar' i=(0)        ; *i32@ptr:0'
    ├ %53 = .comment_line - tok[70..71]
    │  └ token: .comment '//   // %2 = const 123                        ; 123 int'
    ├ %54 = .comment_line - tok[71..72]
    │  └ token: .comment '//   // %3 = as i32 %2                        ; 123 i32'
    ├ %55 = .comment_line - tok[72..73]
    │  └ token: .comment '//   // %4 = store %1 %3                      ; void'
    ├ %56 = .comment_line - tok[73..74]
    │  └ token: .comment '//   var foo = T { bar = 123 };'
    ├ %57 = .comment_line - tok[74..75]
    │  └ token: .comment '//   // %5 = alloc T                          ; *T@ptr:4'
    ├ %58 = .comment_line - tok[75..76]
    │  └ token: .comment '//   // %6 = memcpy %5 %0                     ; void'
    ├ %59 = .comment_line - tok[76..77]
    │  └ token: .comment '//   const foo2 = foo;'
    ├ %60 = .comment_line - tok[77..78]
    │  └ token: .comment '// }'
    ├ %86 = .fn_decl - tok[78..112]
    │  ├ proto: %63 = .fn_proto - tok[79..83]
    │  │  ├ name: %61 = .identifier - tok[79..79]
    │  │  │  └ token: .identifier 'struct_load'
    │  │  ├ params_list: 0 items
    │  │  └ ret_type: %62 = .ty_void - tok[83..83]
    │  │     └ token: .keyword_void 'void'
    │  └ body: %85 = .block - tok[84..111]
    │     └ list: 11 items
    │        ├ %64 = .comment_line - tok[85..86]
    │        │  └ token: .comment '// %0 = alloc T                          ; *T@ptr:0'
    │        ├ %65 = .comment_line - tok[86..87]
    │        │  └ token: .comment '// %1 = get_el_ptr %0 'bar' i=(0)        ; *i32@ptr:0'
    │        ├ %66 = .comment_line - tok[87..88]
    │        │  └ token: .comment '// %2 = const 123                        ; 123 int'
    │        ├ %67 = .comment_line - tok[88..89]
    │        │  └ token: .comment '// %3 = as i32 %2                        ; 123 i32'
    │        ├ %68 = .comment_line - tok[89..90]
    │        │  └ token: .comment '// %4 = store %1 %3                      ; void'
    │        ├ %75 = .const_decl - tok[90..98]
    │        │  ├ name: %69 = .identifier - tok[91..91]
    │        │  │  └ token: .identifier 'foo'
    │        │  ├ type: NONE
    │        │  └ value: %74 = .type_init - tok[93..99]
    │        │     ├ type: %70 = .identifier - tok[93..93]
    │        │     │  └ token: .identifier 'T'
    │        │     └ field_init_list: 1 items
    │        │        └ %73 = .field_init - tok[95..97]
    │        │           ├ name: %71 = .identifier - tok[95..95]
    │        │           │  └ token: .identifier 'bar'
    │        │           └ value: %72 = .number_literal - tok[97..97]
    │        │              └ token: .number_literal '123'
    │        ├ %76 = .comment_line - tok[100..101]
    │        │  └ token: .comment '// %5 = get_el_ptr %0 'bar' i=(0)        ; *i32@ptr:0'
    │        ├ %77 = .comment_line - tok[101..102]
    │        │  └ token: .comment '// %6 = load %5                          ; 123 i32'
    │        ├ %78 = .comment_line - tok[102..103]
    │        │  └ token: .comment '// %7 = alloc i32                        ; *i32@ptr:4'
    │        ├ %79 = .comment_line - tok[103..104]
    │        │  └ token: .comment '// %8 = store %7 %6                      ; void'
    │        └ %84 = .const_decl - tok[104..109]
    │           ├ name: %80 = .identifier - tok[105..105]
    │           │  └ token: .identifier 'bar'
    │           ├ type: NONE
    │           └ value: %83 = .prop_access - tok[107..109]
    │              ├ lhs: %81 = .identifier - tok[107..107]
    │              │  └ token: .identifier 'foo'
    │              └ rhs: %82 = .identifier - tok[109..109]
    │                 └ token: .identifier 'bar'
    ├ %87 = .comment_line - tok[112..113]
    │  └ token: .comment '// const global_foo = T { bar = 123 };'
    ├ %88 = .comment_line - tok[113..114]
    │  └ token: .comment '// fn struct_from_global(): void {'
    ├ %89 = .comment_line - tok[114..115]
    │  └ token: .comment '//   // %0 = alloc T                          ; *T@ptr:0'
    ├ %90 = .comment_line - tok[115..116]
    │  └ token: .comment '//   // %1 = memcpy %0 %global_foo            ; void'
    ├ %91 = .comment_line - tok[116..117]
    │  └ token: .comment '//   const bar = global_foo;'
    ├ %92 = .comment_line - tok[117..118]
    │  └ token: .comment '// }'
    ├ %105 = .fn_decl - tok[118..137]
    │  ├ proto: %95 = .fn_proto - tok[119..123]
    │  │  ├ name: %93 = .identifier - tok[119..119]
    │  │  │  └ token: .identifier 'int_alloc'
    │  │  ├ params_list: 0 items
    │  │  └ ret_type: %94 = .ty_void - tok[123..123]
    │  │     └ token: .keyword_void 'void'
    │  └ body: %104 = .block - tok[124..136]
    │     └ list: 5 items
    │        ├ %96 = .comment_line - tok[125..126]
    │        │  └ token: .comment '// %0 = alloc i32                        ; *i32@ptr:0'
    │        ├ %97 = .comment_line - tok[126..127]
    │        │  └ token: .comment '// %1 = const 10                         ; 10 int'
    │        ├ %98 = .comment_line - tok[127..128]
    │        │  └ token: .comment '// %2 = as i32 %1                        ; 10 i32'
    │        ├ %99 = .comment_line - tok[128..129]
    │        │  └ token: .comment '// %3 = store %0 %2                      ; void'
    │        └ %103 = .const_decl - tok[129..134]
    │           ├ name: %100 = .identifier - tok[130..130]
    │           │  └ token: .identifier 'foo'
    │           ├ type: %101 = .ty_i32 - tok[132..132]
    │           │  └ token: .keyword_i32 'i32'
    │           └ value: %102 = .number_literal - tok[134..134]
    │              └ token: .number_literal '10'
    ├ %124 = .fn_decl - tok[137..163]
    │  ├ proto: %108 = .fn_proto - tok[138..142]
    │  │  ├ name: %106 = .identifier - tok[138..138]
    │  │  │  └ token: .identifier 'int_alloc_2'
    │  │  ├ params_list: 0 items
    │  │  └ ret_type: %107 = .ty_void - tok[142..142]
    │  │     └ token: .keyword_void 'void'
    │  └ body: %123 = .block - tok[143..162]
    │     └ list: 9 items
    │        ├ %109 = .comment_line - tok[144..145]
    │        │  └ token: .comment '// %0 = alloc i32                        ; *i32@ptr:0'
    │        ├ %110 = .comment_line - tok[145..146]
    │        │  └ token: .comment '// %1 = const 10                         ; 10 int'
    │        ├ %111 = .comment_line - tok[146..147]
    │        │  └ token: .comment '// %2 = as i32 %1                        ; 10 i32'
    │        ├ %112 = .comment_line - tok[147..148]
    │        │  └ token: .comment '// %3 = store %0 %2                      ; void'
    │        ├ %116 = .var_decl - tok[148..153]
    │        │  ├ name: %113 = .identifier - tok[149..149]
    │        │  │  └ token: .identifier 'foo'
    │        │  ├ type: %114 = .ty_i32 - tok[151..151]
    │        │  │  └ token: .keyword_i32 'i32'
    │        │  └ value: %115 = .number_literal - tok[153..153]
    │        │     └ token: .number_literal '10'
    │        ├ %117 = .comment_line - tok[155..156]
    │        │  └ token: .comment '// %4 = const 123                        ; 123 int'
    │        ├ %118 = .comment_line - tok[156..157]
    │        │  └ token: .comment '// %5 = as i32 %4                        ; 123 i32'
    │        ├ %119 = .comment_line - tok[157..158]
    │        │  └ token: .comment '// %6 = store %0 %5                      ; void'
    │        └ %122 = .assign - tok[158..160]
    │           ├ lhs: %120 = .identifier - tok[158..158]
    │           │  └ token: .identifier 'foo'
    │           └ rhs: %121 = .number_literal - tok[160..160]
    │              └ token: .number_literal '123'
    ├ %143 = .fn_decl - tok[163..190]
    │  ├ proto: %127 = .fn_proto - tok[164..168]
    │  │  ├ name: %125 = .identifier - tok[164..164]
    │  │  │  └ token: .identifier 'int_load'
    │  │  ├ params_list: 0 items
    │  │  └ ret_type: %126 = .ty_void - tok[168..168]
    │  │     └ token: .keyword_void 'void'
    │  └ body: %142 = .block - tok[169..189]
    │     └ list: 9 items
    │        ├ %128 = .comment_line - tok[170..171]
    │        │  └ token: .comment '// %0 = alloc i32                        ; *i32@ptr:0'
    │        ├ %129 = .comment_line - tok[171..172]
    │        │  └ token: .comment '// %1 = const 10                         ; 10 int'
    │        ├ %130 = .comment_line - tok[172..173]
    │        │  └ token: .comment '// %2 = as i32 %1                        ; 10 i32'
    │        ├ %131 = .comment_line - tok[173..174]
    │        │  └ token: .comment '// %3 = store %0 %2                      ; void'
    │        ├ %135 = .const_decl - tok[174..179]
    │        │  ├ name: %132 = .identifier - tok[175..175]
    │        │  │  └ token: .identifier 'foo'
    │        │  ├ type: %133 = .ty_i32 - tok[177..177]
    │        │  │  └ token: .keyword_i32 'i32'
    │        │  └ value: %134 = .number_literal - tok[179..179]
    │        │     └ token: .number_literal '10'
    │        ├ %136 = .comment_line - tok[181..182]
    │        │  └ token: .comment '// %4 = load i32 %0                      ; 10 i32'
    │        ├ %137 = .comment_line - tok[182..183]
    │        │  └ token: .comment '// %5 = alloc i32                        ; *i32@ptr:4'
    │        ├ %138 = .comment_line - tok[183..184]
    │        │  └ token: .comment '// %6 = store i32 %5 %4                  ; void'
    │        └ %141 = .const_decl - tok[184..187]
    │           ├ name: %139 = .identifier - tok[185..185]
    │           │  └ token: .identifier 'bar'
    │           ├ type: NONE
    │           └ value: %140 = .identifier - tok[187..187]
    │              └ token: .identifier 'foo'
    ├ %179 = .fn_decl - tok[190..237]
    │  ├ proto: %146 = .fn_proto - tok[191..195]
    │  │  ├ name: %144 = .identifier - tok[191..191]
    │  │  │  └ token: .identifier 'array_alloc'
    │  │  ├ params_list: 0 items
    │  │  └ ret_type: %145 = .ty_void - tok[195..195]
    │  │     └ token: .keyword_void 'void'
    │  └ body: %178 = .block - tok[196..236]
    │     └ list: 20 items
    │        ├ %147 = .comment_line - tok[197..198]
    │        │  └ token: .comment '// %0 = alloc [3]i32                        ; *[3]i32@ptr:0'
    │        ├ %148 = .comment_line - tok[198..199]
    │        │  └ token: .comment '// %1 = const 0                             ; 0 int'
    │        ├ %149 = .comment_line - tok[199..200]
    │        │  └ token: .comment '// %2 = as usize %1                         ; 0 usize'
    │        ├ %150 = .comment_line - tok[200..201]
    │        │  └ token: .comment '// %3 = get_el_ptr %0 i=(%2) offset=(0)     ; *i32@ptr:0'
    │        ├ %151 = .comment_line - tok[201..202]
    │        │  └ token: .comment '// %4 = const 1                             ; 1 int'
    │        ├ %152 = .comment_line - tok[202..203]
    │        │  └ token: .comment '// %5 = as i32 %4                           ; 1 i32'
    │        ├ %153 = .comment_line - tok[203..204]
    │        │  └ token: .comment '// %6 = store %3 %5                         ; void'
    │        ├ %154 = .comment_line - tok[204..205]
    │        │  └ token: .comment '// %7 = const 1                             ; 1 int'
    │        ├ %155 = .comment_line - tok[205..206]
    │        │  └ token: .comment '// %8 = as usize %7                         ; 1 usize'
    │        ├ %156 = .comment_line - tok[206..207]
    │        │  └ token: .comment '// %9 = get_el_ptr %0 i=(%8) offset=(4)     ; *i32@ptr:4'
    │        ├ %157 = .comment_line - tok[207..208]
    │        │  └ token: .comment '// %10 = const 2                            ; 2 int'
    │        ├ %158 = .comment_line - tok[208..209]
    │        │  └ token: .comment '// %11 = as i32 %10                         ; 2 i32'
    │        ├ %159 = .comment_line - tok[209..210]
    │        │  └ token: .comment '// %12 = store %9 %11                       ; void'
    │        ├ %160 = .comment_line - tok[210..211]
    │        │  └ token: .comment '// %13 = const 2                            ; 2 int'
    │        ├ %161 = .comment_line - tok[211..212]
    │        │  └ token: .comment '// %14 = as usize %13                       ; 2 usize'
    │        ├ %162 = .comment_line - tok[212..213]
    │        │  └ token: .comment '// %15 = get_el_ptr %0 i=(%14) offset=(8)   ; *i32@ptr:8'
    │        ├ %163 = .comment_line - tok[213..214]
    │        │  └ token: .comment '// %16 = const 3                            ; 3 int'
    │        ├ %164 = .comment_line - tok[214..215]
    │        │  └ token: .comment '// %17 = as i32 %16                         ; 3 i32'
    │        ├ %165 = .comment_line - tok[215..216]
    │        │  └ token: .comment '// %18 = store %15 %17                      ; void'
    │        └ %177 = .const_decl - tok[216..234]
    │           ├ name: %166 = .identifier - tok[217..217]
    │           │  └ token: .identifier 'foo'
    │           ├ type: %169 = .ty_array - tok[219..223]
    │           │  ├ size_expr: %167 = .number_literal - tok[220..220]
    │           │  │  └ token: .number_literal '3'
    │           │  └ type: %168 = .ty_i32 - tok[222..222]
    │           │     └ token: .keyword_i32 'i32'
    │           └ value: %176 = .array_init - tok[224..235]
    │              ├ type: %172 = .ty_array - tok[224..228]
    │              │  ├ size_expr: %170 = .number_literal - tok[225..225]
    │              │  │  └ token: .number_literal '3'
    │              │  └ type: %171 = .ty_i32 - tok[227..227]
    │              │     └ token: .keyword_i32 'i32'
    │              └ items_list: 3 items
    │                 ├ %173 = .number_literal - tok[229..229]
    │                 │  └ token: .number_literal '1'
    │                 ├ %174 = .number_literal - tok[231..231]
    │                 │  └ token: .number_literal '2'
    │                 └ %175 = .number_literal - tok[233..233]
    │                    └ token: .number_literal '3'
    ├ %226 = .fn_decl - tok[237..297]
    │  ├ proto: %182 = .fn_proto - tok[238..242]
    │  │  ├ name: %180 = .identifier - tok[238..238]
    │  │  │  └ token: .identifier 'array_alloc_2'
    │  │  ├ params_list: 0 items
    │  │  └ ret_type: %181 = .ty_void - tok[242..242]
    │  │     └ token: .keyword_void 'void'
    │  └ body: %225 = .block - tok[243..296]
    │     └ list: 27 items
    │        ├ %183 = .comment_line - tok[244..245]
    │        │  └ token: .comment '// %0 = alloc [3]i32                        ; *[3]i32@ptr:0'
    │        ├ %184 = .comment_line - tok[245..246]
    │        │  └ token: .comment '// %1 = const 0                             ; 0 int'
    │        ├ %185 = .comment_line - tok[246..247]
    │        │  └ token: .comment '// %2 = as usize %1                         ; 0 usize'
    │        ├ %186 = .comment_line - tok[247..248]
    │        │  └ token: .comment '// %3 = get_el_ptr %0 i=(%2) offset=(0)     ; *i32@ptr:0'
    │        ├ %187 = .comment_line - tok[248..249]
    │        │  └ token: .comment '// %4 = const 1                             ; 1 int'
    │        ├ %188 = .comment_line - tok[249..250]
    │        │  └ token: .comment '// %5 = as i32 %4                           ; 1 i32'
    │        ├ %189 = .comment_line - tok[250..251]
    │        │  └ token: .comment '// %6 = store %3 %5                         ; void'
    │        ├ %190 = .comment_line - tok[251..252]
    │        │  └ token: .comment '// %7 = const 1                             ; 1 int'
    │        ├ %191 = .comment_line - tok[252..253]
    │        │  └ token: .comment '// %8 = as usize %7                         ; 1 usize'
    │        ├ %192 = .comment_line - tok[253..254]
    │        │  └ token: .comment '// %9 = get_el_ptr %0 i=(%8) offset=(4)     ; *i32@ptr:4'
    │        ├ %193 = .comment_line - tok[254..255]
    │        │  └ token: .comment '// %10 = const 2                            ; 2 int'
    │        ├ %194 = .comment_line - tok[255..256]
    │        │  └ token: .comment '// %11 = as i32 %10                         ; 2 i32'
    │        ├ %195 = .comment_line - tok[256..257]
    │        │  └ token: .comment '// %12 = store %9 %11                       ; void'
    │        ├ %196 = .comment_line - tok[257..258]
    │        │  └ token: .comment '// %13 = const 2                            ; 2 int'
    │        ├ %197 = .comment_line - tok[258..259]
    │        │  └ token: .comment '// %14 = as usize %13                       ; 2 usize'
    │        ├ %198 = .comment_line - tok[259..260]
    │        │  └ token: .comment '// %15 = get_el_ptr %0 i=(%14) offset=(8)   ; *i32@ptr:8'
    │        ├ %199 = .comment_line - tok[260..261]
    │        │  └ token: .comment '// %16 = const 3                            ; 3 int'
    │        ├ %200 = .comment_line - tok[261..262]
    │        │  └ token: .comment '// %17 = as i32 %16                         ; 3 i32'
    │        ├ %201 = .comment_line - tok[262..263]
    │        │  └ token: .comment '// %18 = store %15 %17                      ; void'
    │        ├ %213 = .var_decl - tok[263..281]
    │        │  ├ name: %202 = .identifier - tok[264..264]
    │        │  │  └ token: .identifier 'foo'
    │        │  ├ type: %205 = .ty_array - tok[266..270]
    │        │  │  ├ size_expr: %203 = .number_literal - tok[267..267]
    │        │  │  │  └ token: .number_literal '3'
    │        │  │  └ type: %204 = .ty_i32 - tok[269..269]
    │        │  │     └ token: .keyword_i32 'i32'
    │        │  └ value: %212 = .array_init - tok[271..282]
    │        │     ├ type: %208 = .ty_array - tok[271..275]
    │        │     │  ├ size_expr: %206 = .number_literal - tok[272..272]
    │        │     │  │  └ token: .number_literal '3'
    │        │     │  └ type: %207 = .ty_i32 - tok[274..274]
    │        │     │     └ token: .keyword_i32 'i32'
    │        │     └ items_list: 3 items
    │        │        ├ %209 = .number_literal - tok[276..276]
    │        │        │  └ token: .number_literal '1'
    │        │        ├ %210 = .number_literal - tok[278..278]
    │        │        │  └ token: .number_literal '2'
    │        │        └ %211 = .number_literal - tok[280..280]
    │        │           └ token: .number_literal '3'
    │        ├ %214 = .comment_line - tok[283..284]
    │        │  └ token: .comment '// %19 = const 0                            ; 0 int'
    │        ├ %215 = .comment_line - tok[284..285]
    │        │  └ token: .comment '// %20 = as usize %19                       ; 0 usize'
    │        ├ %216 = .comment_line - tok[285..286]
    │        │  └ token: .comment '// %21 = get_el_ptr %0 i=(%20) offset=(0)   ; *i32@ptr:0'
    │        ├ %217 = .comment_line - tok[286..287]
    │        │  └ token: .comment '// %22 = const 4                            ; 4 int'
    │        ├ %218 = .comment_line - tok[287..288]
    │        │  └ token: .comment '// %23 = as i32 %22                         ; 4 i32'
    │        ├ %219 = .comment_line - tok[288..289]
    │        │  └ token: .comment '// %24 = store %21 %23                      ; void'
    │        └ %224 = .assign - tok[289..294]
    │           ├ lhs: %222 = .array_prop_access - tok[289..292]
    │           │  ├ lhs: %220 = .identifier - tok[289..289]
    │           │  │  └ token: .identifier 'foo'
    │           │  └ rhs: %221 = .number_literal - tok[291..291]
    │           │     └ token: .number_literal '0'
    │           └ rhs: %223 = .number_literal - tok[294..294]
    │              └ token: .number_literal '4'
    ├ %259 = .fn_decl - tok[297..339]
    │  ├ proto: %229 = .fn_proto - tok[298..302]
    │  │  ├ name: %227 = .identifier - tok[298..298]
    │  │  │  └ token: .identifier 'array_alloc_3'
    │  │  ├ params_list: 0 items
    │  │  └ ret_type: %228 = .ty_void - tok[302..302]
    │  │     └ token: .keyword_void 'void'
    │  └ body: %258 = .block - tok[303..338]
    │     └ list: 20 items
    │        ├ %230 = .comment_line - tok[304..305]
    │        │  └ token: .comment '// %0 = alloc [3]i32                        ; *[3]i32@ptr:0'
    │        ├ %231 = .comment_line - tok[305..306]
    │        │  └ token: .comment '// %1 = const 0                             ; 0 int'
    │        ├ %232 = .comment_line - tok[306..307]
    │        │  └ token: .comment '// %2 = as usize %1                         ; 0 usize'
    │        ├ %233 = .comment_line - tok[307..308]
    │        │  └ token: .comment '// %3 = get_el_ptr %0 i=(%2) offset=(0)     ; *i32@ptr:0'
    │        ├ %234 = .comment_line - tok[308..309]
    │        │  └ token: .comment '// %4 = const 1                             ; 1 int'
    │        ├ %235 = .comment_line - tok[309..310]
    │        │  └ token: .comment '// %5 = as i32 %4                           ; 1 i32'
    │        ├ %236 = .comment_line - tok[310..311]
    │        │  └ token: .comment '// %6 = store %3 %5                         ; void'
    │        ├ %237 = .comment_line - tok[311..312]
    │        │  └ token: .comment '// %7 = const 1                             ; 1 int'
    │        ├ %238 = .comment_line - tok[312..313]
    │        │  └ token: .comment '// %8 = as usize %7                         ; 1 usize'
    │        ├ %239 = .comment_line - tok[313..314]
    │        │  └ token: .comment '// %9 = get_el_ptr %0 i=(%8) offset=(4)     ; *i32@ptr:4'
    │        ├ %240 = .comment_line - tok[314..315]
    │        │  └ token: .comment '// %10 = const 2                            ; 2 int'
    │        ├ %241 = .comment_line - tok[315..316]
    │        │  └ token: .comment '// %11 = as i32 %10                         ; 2 i32'
    │        ├ %242 = .comment_line - tok[316..317]
    │        │  └ token: .comment '// %12 = store %9 %11                       ; void'
    │        ├ %243 = .comment_line - tok[317..318]
    │        │  └ token: .comment '// %13 = const 2                            ; 2 int'
    │        ├ %244 = .comment_line - tok[318..319]
    │        │  └ token: .comment '// %14 = as usize %13                       ; 2 usize'
    │        ├ %245 = .comment_line - tok[319..320]
    │        │  └ token: .comment '// %15 = get_el_ptr %0 i=(%14) offset=(8)   ; *i32@ptr:8'
    │        ├ %246 = .comment_line - tok[320..321]
    │        │  └ token: .comment '// %16 = const 3                            ; 3 int'
    │        ├ %247 = .comment_line - tok[321..322]
    │        │  └ token: .comment '// %17 = as i32 %16                         ; 3 i32'
    │        ├ %248 = .comment_line - tok[322..323]
    │        │  └ token: .comment '// %18 = store %15 %17                      ; void'
    │        └ %257 = .const_decl - tok[323..336]
    │           ├ name: %249 = .identifier - tok[324..324]
    │           │  └ token: .identifier 'foo'
    │           ├ type: NONE
    │           └ value: %256 = .array_init - tok[326..337]
    │              ├ type: %252 = .ty_array - tok[326..330]
    │              │  ├ size_expr: %250 = .number_literal - tok[327..327]
    │              │  │  └ token: .number_literal '3'
    │              │  └ type: %251 = .ty_i32 - tok[329..329]
    │              │     └ token: .keyword_i32 'i32'
    │              └ items_list: 3 items
    │                 ├ %253 = .number_literal - tok[331..331]
    │                 │  └ token: .number_literal '1'
    │                 ├ %254 = .number_literal - tok[333..333]
    │                 │  └ token: .number_literal '2'
    │                 └ %255 = .number_literal - tok[335..335]
    │                    └ token: .number_literal '3'
    ├ %260 = .comment_line - tok[339..340]
    │  └ token: .comment '// %mem.data.0: [5]bchar = "Hello"'
    ├ %270 = .fn_decl - tok[340..355]
    │  ├ proto: %263 = .fn_proto - tok[341..345]
    │  │  ├ name: %261 = .identifier - tok[341..341]
    │  │  │  └ token: .identifier 'str_alloc'
    │  │  ├ params_list: 0 items
    │  │  └ ret_type: %262 = .ty_void - tok[345..345]
    │  │     └ token: .keyword_void 'void'
    │  └ body: %269 = .block - tok[346..354]
    │     └ list: 3 items
    │        ├ %264 = .comment_line - tok[347..348]
    │        │  └ token: .comment '// %0 = alloc [5]bchar                    ; [..5]bchar@ptr:0'
    │        ├ %265 = .comment_line - tok[348..349]
    │        │  └ token: .comment '// %1 = memcpy %0 %mem.data.0             ; void'
    │        └ %268 = .const_decl - tok[349..352]
    │           ├ name: %266 = .identifier - tok[350..350]
    │           │  └ token: .identifier 'foo'
    │           ├ type: NONE
    │           └ value: %267 = .string_literal - tok[352..352]
    │              └ token: .string_literal '"Hello"'
    └ %289 = .fn_decl - tok[355..381]
       ├ proto: %273 = .fn_proto - tok[356..360]
       │  ├ name: %271 = .identifier - tok[356..356]
       │  │  └ token: .identifier 'str_alloc_2'
       │  ├ params_list: 0 items
       │  └ ret_type: %272 = .ty_void - tok[360..360]
       │     └ token: .keyword_void 'void'
       └ body: %288 = .block - tok[361..380]
          └ list: 8 items
             ├ %274 = .comment_line - tok[362..363]
             │  └ token: .comment '// %0 = alloc [5]bchar                    ; [..5]bchar@ptr:0'
             ├ %275 = .comment_line - tok[363..364]
             │  └ token: .comment '// %1 = memcpy %0 %mem.data.0             ; void'
             ├ %278 = .var_decl - tok[364..367]
             │  ├ name: %276 = .identifier - tok[365..365]
             │  │  └ token: .identifier 'foo'
             │  ├ type: NONE
             │  └ value: %277 = .string_literal - tok[367..367]
             │     └ token: .string_literal '"Hello"'
             ├ %279 = .comment_line - tok[369..370]
             │  └ token: .comment '// %2 = usize.const 0                     ; 0 usize'
             ├ %280 = .comment_line - tok[370..371]
             │  └ token: .comment '// %3 = get_el_ptr %0 i=(%2) offset=(0)   ; *bchar@ptr:0'
             ├ %281 = .comment_line - tok[371..372]
             │  └ token: .comment '// %4 = bchar.const 'h'                   ; 'h' bchar'
             ├ %282 = .comment_line - tok[372..373]
             │  └ token: .comment '// %5 = store %3 %4                       ; void'
             └ %287 = .assign - tok[373..378]
                ├ lhs: %285 = .array_prop_access - tok[373..376]
                │  ├ lhs: %283 = .identifier - tok[373..373]
                │  │  └ token: .identifier 'foo'
                │  └ rhs: %284 = .number_literal - tok[375..375]
                │     └ token: .number_literal '0'
                └ rhs: %286 = .char_literal - tok[378..378]
                   └ token: .char_literal ''h''
